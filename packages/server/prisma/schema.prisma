// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  uid            String          @unique @default(cuid())
  enabled        Boolean         @default(true)
  createdAt      DateTime        @default(now())
  lastAccessedAt DateTime?
  authSchemes    AuthScheme[]
  displayName    String          @default("")
  contacts       Contact[]
  subscriptions  Subscriptions[]
}

model AuthScheme {
  id           Int     @id @default(autoincrement())
  userId       Int
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  scheme       String
  username     String
  secret       String
  pendingReset Boolean @default(false)

  @@unique([scheme, username])
  @@unique([scheme, userId])
}

model ExpiredTokens {
  token        String   @id
  expiredSince DateTime @default(now())
}

model Contact {
  id      Int    @id
  userId  Int
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  channel String
  address String
}

model Subscriptions {
  id      Int     @id
  userId  Int
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  event   String
  channel String
  enabled Boolean
}

model MessageOutBox {
  id           Int       @id @default(autoincrement())
  templateName String
  channelName  String
  data         String
  address      String
  sentAt       DateTime  @default(now())
  lastSentAt   DateTime?
  status       String    @default("pending")
  errorCount   Int       @default(0)
}
